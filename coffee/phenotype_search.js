// Generated by CoffeeScript 1.9.2
(function() {
  var APP_ID, HITS_PER_PAGE, INDEX_NAME, SEARCH_ONLY_API_KEY;

  APP_ID = "A6LX075BLV";

  SEARCH_ONLY_API_KEY = "164c63eedb7efb07d13443812d592944";

  INDEX_NAME = "phenotype";

  HITS_PER_PAGE = 50;

  $(function() {
    var client, hitTemplate, numericFields, onError, onSuccess, params, performSearch, pheno_index, renderHits;
    client = algoliasearch(APP_ID, SEARCH_ONLY_API_KEY);
    pheno_index = client.initIndex(INDEX_NAME);
    numericFields = ['LRS', 'Mb', 'Year', 'additive'];
    params = {
      hitsPerPage: HITS_PER_PAGE,
      advancedSyntax: true
    };
    performSearch = (function(_this) {
      return function() {
        var query, query_params;
        query = $("#q").val();
        query_params = $.extend({}, params);
        query_params.numericFilters = $("#filter").val();
        return pheno_index.search(query, query_params).then(onSuccess)["catch"](onError);
      };
    })(this);
    $("#q").on('keyup', (function(_this) {
      return function() {
        return performSearch();
      };
    })(this));
    $("#filter").on('keyup', (function(_this) {
      return function() {
        return performSearch();
      };
    })(this));
    onSuccess = (function(_this) {
      return function(content) {
        renderHits(content);
        return $("#filter").css('background-color', '#fff');
      };
    })(this);
    onError = (function(_this) {
      return function(err) {
        console.log(err);
        return $("#filter").css('background-color', '#fdd');
      };
    })(this);
    $("#q").focus();
    hitTemplate = Hogan.compile($('#hit-template').text());
    return renderHits = function(content) {
      var e, header, header_fields, hit, hitsHtml, i, j, len, ref, x;
      hitsHtml = '<table id="trait_table">';
      header_fields = ['Record ID', 'Description', 'Authors', 'Year', 'LRS', 'LRS location', 'Additive effect'];
      header = ((function() {
        var j, len, results;
        results = [];
        for (j = 0, len = header_fields.length; j < len; j++) {
          x = header_fields[j];
          results.push('<th>' + x + '</th>');
        }
        return results;
      })()).join('');
      hitsHtml += '<thead><tr>' + header + '</tr></thead><tbody>';
      ref = content.hits;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        hit = ref[i];
        hit.description = hit._highlightResult.Post_publication_description.value;
        hit.LRS = parseFloat(hit.LRS.toFixed(3));
        if (hit.Mb > 1e6) {
          hit.Mb /= 1e6;
        }
        hit.LRS_location = "Chr " + hit.Chr + ": " + (hit.Mb.toFixed(6)) + " Mb";
        try {
          hit.additive = parseFloat(hit.additive).toFixed(3);
        } catch (_error) {
          e = _error;
          hit.additive = null;
        }
        hitsHtml += hitTemplate.render(hit);
      }
      hitsHtml += '</tbody></table>';
      if (content.hits.length === 0) {
        hitsHtml = '<p id="no-hits">We didn\'t find any phenotypes for your search.</p>';
      }
      $("#hits").html(hitsHtml);
      return $('#trait_table').dataTable({
        columns: [
          {
            type: "num",
            swidth: "5%"
          }, {
            sWidth: "35%"
          }, {
            sWidth: "15%"
          }, {
            type: "num"
          }, {
            type: "num"
          }, {
            type: "natural"
          }, {
            type: "num"
          }
        ],
        sDom: "tir",
        iDisplayLength: -1,
        autoWidth: true,
        bLengthChange: true,
        bDeferRender: true,
        bSortClasses: false
      });
    };
  });

}).call(this);
